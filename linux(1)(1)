 program 1) student@administrator-HP-280-G2-MT-Legacy:~$ gedit palindrome.sh

//palindrome file

echo "enter string";
read str;
str2=$( echo $str | rev );
if [ $str == $str2 ]
then
	echo "yes";
else
	echo "not";
fi

//output
student@administrator-HP-280-G2-MT-Legacy:~$ bash palindrome.sh
enter string
aba
yes


program 2 switch case

// gedit switch.sh
echo "enter first no";
read first;
echo "enter sewcond no";
read second;
echo "enter 1:add 2:mul choice:";
read choice;
case $choice in
1) echo "$(( first + second ))";;
2)  echo "$(( first * second ))";;
*)  echo "default";
esac


//output

student@administrator-HP-280-G2-MT-Legacy:~$ bash  switch.sh
enter first no
10
enter sewcond no
10
enter 1:add 2:mul choice:


student@administrator-HP-280-G2-MT-Legacy:~$ echo $(( 2 ** 3 ))
8
student@administrator-HP-280-G2-MT-Legacy:~$ echo 12/5 | bc
2
student@administrator-HP-280-G2-MT-Legacy:~$ echo 12/5 | bc -l
2.40000000000000000000
student@administrator-HP-280-G2-MT-Legacy:~$ echo "scale=2; 12/5" | bc -l
2.40
student@administrator-HP-280-G2-MT-Legacy:~$ echo "1234" | rev 
4321
student@administrator-HP-280-G2-MT-Legacy:~$ echo "abcd" | rev 
dcba



program 3
student@administrator-HP-280-G2-MT-Legacy:~$ gedit sorting_numeric

1
10
2
30
20
22


//output
student@administrator-HP-280-G2-MT-Legacy:~$ sort sorting_numeric
1
10
2
20
22
30
student@administrator-HP-280-G2-MT-Legacy:~$ sort -n sorting_numeric
1
2
10
20
22
30
student@administrator-HP-280-G2-MT-Legacy:~$ sort -nr sorting_numeric
30
22
20
10
2
1

program 4

// * pattern

student@administrator-HP-280-G2-MT-Legacy:~$ gedit for.sh

for(( row = 0; row < 10; row++ ))
do

   for(( star = 0 ; star < row ; star++ ))
   do
   echo -n "*";
   done
for(( space = 0 ; space <= row ; space++ ))
   do
   echo -n " ";
   done
   
   
   echo "";
done

//output

student@administrator-HP-280-G2-MT-Legacy:~$ bash for.sh
 
*  
**   
***    
****     
*****      
******       
*******        
********         
********* 

program 5

student@administrator-HP-280-G2-MT-Legacy:~$ gedit for.sh

for(( row = 0; row < 10; row++ ))
do

   
for(( space = 10 ; space > row ; space-- ))
   do
   echo -n " ";
   done
for(( star = 0 ; star <= row ; star++ ))
   do
   echo -n "* ";
   done
   
   
   echo "";
done


//output
student@administrator-HP-280-G2-MT-Legacy:~$ bash for.sh
          * 
         * * 
        * * * 
       * * * * 
      * * * * * 
     * * * * * * 
    * * * * * * * 
   * * * * * * * * 
  * * * * * * * * * 
 * * * * * * * * * * 

program 6

student@administrator-HP-280-G2-MT-Legacy:~$ gedit for.sh

for(( row = 0; row < 10; row++ ))
do

   
for(( space = 10 ; space > row ; space-- ))
   do
   echo -n " ";
   done
for(( star = 0 ; star <= row ; star++ ))
   do
   echo -n "*";
   done
   
   
   echo "";
done




//output
student@administrator-HP-280-G2-MT-Legacy:~$ bash for.sh
          *
         **
        ***
       ****
      *****
     ******
    *******
   ********
  *********
 **********

program 7

student@administrator-HP-280-G2-MT-Legacy:~$ gedit for.sh

for(( row = 0; row < 10; row++ ))
do

   for(( star = 10 ; star > row ; star-- ))
   do
   echo -n "*";
   done
   
   for(( space = 0 ; space <= row ; space++ ))
   do
   echo -n " ";
   done
   
   echo "";
done

//output

student@administrator-HP-280-G2-MT-Legacy:~$ bash for.sh
********** 
*********  
********   
*******    
******     
*****      
****       
***        
**         
*   

program 

echo "num1"
read num1
echo "num2"
read num2
if [ $num1 -gt $num2 ]
then
echo "$num1 is greater than $num2";
 	
        elif [ $num1 -lt $num2 ]
        then
   	echo "$num1 is less than $num2";
 	
else
echo "$num1 equal to $num2";
fi


//output

student@administrator-HP-280-G2-MT-Legacy:~$ bash if.sh
num1
3
num2
4
3 is less than 4
student@administrator-HP-280-G2-MT-Legacy:~$ bash if.sh
num1
5
num2
2
5 is greater than 2
student@administrator-HP-280-G2-MT-Legacy:~$ bash if.sh
num1
4
num2
4
4 equal to 4


program

echo "enter number"
read num
fact=1
while [ $num -gt 1 ]
do
 	fact=$(( fact * num ))

	num=$(( num -1 ))
done
echo $fact

//output
student@administrator-HP-280-G2-MT-Legacy:~$ bash fact.sh
enter number
5
120



program avg

echo "enter size"
read N
i=1
sum=0
echo "enter number"
while [ $i -le $N ]
do
read num
sum=$(( sum + num ))
i=$(( i+1 ))
done
avg=$( echo $sum / $N | bc -l )
echo $avg


//output

student@administrator-HP-280-G2-MT-Legacy:~$ bash  avg.sh
enter size
3
enter number
10
20
30
20.00000000000000000000

program fibonacci
 
N=6
a=0
b=1

for(( i=0 ; i < N ; i++ ))
do
echo -n " $a "
sum=$(( a + b ))
a=$b
b=$sum
done

//output

student@administrator-HP-280-G2-MT-Legacy:~$ bash fibo.sh
 0  1  1  2  3  5

----------------------------------------------------------------------------------------------------
PROGRAM EVEN-ODD

	echo "Enter number";
	read n;
	rem=$(( $n % 2))
	if [ $rem -eq 0 ]
	then
	echo "$n is even";
	else
	echo "$n is odd";
	fi
	
	OUTPUT=>student@administrator-HP-280-G2-MT-Legacy:~$ bash evenodd.sh
		Enter number
		4
		4 is even
		student@administrator-HP-280-G2-MT-Legacy:~$ bash evenodd.sh
		Enter number
		7
		7 is odd
---------------------------------------------------------------------------------------------------
PROGRAM CONCATENTAION OF 2 STRINGS
	
	str1="Hello"
	str2="World"
	str3=$str1$str2
	echo $str3

OUTPUT=>student@administrator-HP-280-G2-MT-Legacy:~$ bash sringconcat.sh
HelloWorld
----------------------------------------------------------------------------------------------------
PROGRAM PRIME NO
	number=44
	i=2 
	f=0 

	while test $i -le `expr $number / 2`  
		do
		if test `expr $number % $i` -eq 0  
		then
			f=1 
		fi
	 
			i=`expr $i + 1` 
		done
		if test $f -eq 1  
		then
		echo "Not Prime"
		else
		echo "Prime"
		fi

OUTPUT=>student@administrator-HP-280-G2-MT-Legacy:~$ gedit primeno.sh
student@administrator-HP-280-G2-MT-Legacy:~$ bash  primeno.sh
Prime
student@administrator-HP-280-G2-MT-Legacy:~$ gedit primeno.sh
student@administrator-HP-280-G2-MT-Legacy:~$ bash  primeno.sh
Not Prime


























